version: "3"
services:
    scraping:
        build:
            context: .
            dockerfile: scraping/Dockerfile
        command: python -u scraping/main.py
        image: soccerstat_scraping
        restart: always
        container_name: scraping_container
        ports:
            - "8080:8080"
        volumes:
            - volume_scraping:/scraping/db
        networks: 
            - scraping_mongo_net
            - scraping_app_net

    mongo:
        build: 
            context: .
            dockerfile: mongo/Dockerfile
        container_name: mongo_container
        hostname: soccerstat_mongodb
        restart: always
        environment:
            - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
            - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
        volumes:
            - volume_scraping:/scraping/db
            - volume_backend_db:/data/db
            - volume_backend_config:/data/configdb
        ports:
            - 27017:27017
        networks: 
            - scraping_mongo_net
            - mongo_app_net
        depends_on: 
            - scraping
    app:
        build:
            context: .
            dockerfile: app/Dockerfile
        command: python -u app/main.py
        image: soccerstat_app
        restart: always
        container_name: app_container
        ports:
            - "5000:5000"
        volumes:
            - volume_app:/app
        networks: 
            - scraping_app_net
            - mongo_app_net
        depends_on: 
            - scraping
            - mongo
volumes: 
    volume_app:
        driver: local
    volume_scraping:
    volume_backend_db:
        driver: local
    volume_backend_config:
        driver: local
networks: 
    scraping_mongo_net:
        driver: bridge
    scraping_app_net:
        driver: bridge
    mongo_app_net:
        driver: bridge